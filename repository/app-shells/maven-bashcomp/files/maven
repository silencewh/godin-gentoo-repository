#!/bin/bash

_m2_make_goals()
{
  plugin=$1
  mojos=$2
  for mojo in $mojos
  do
    export goals="$goals $plugin:$mojo"
  done
}

_m2_complete()
{
  local cur prev possibles
  local opts goals phases
  local defines profiles

  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}

    profiles="test release"
    defines="skipTests=true"
    opts="\
-q --quiet \
-C --strict-checksums \
-c --lax-checksums \
-P --activate-profiles \
-ff --fail-fast \
-fae --fail-at-end \
-B --batch-mode \
-fn --fail-never \
-up --update-plugins \
-N --non-recursive \
-npr --no-plugin-registry \
-U --update-snapshots \
-cpu --check-plugin-updates \
-npu --no-plugin-updates \
-D --define \
-X --debug \
-e --errors \
-f --file \
-h --help \
-o --offline \
-r --reactor \
-s --settings \
-V --show-version \
-v --version \
"
    phases="clean compile test install package deploy site"

    case "${cur}" in
        -*)
            COMPREPLY=($(compgen -W "$opts" -- "$cur"))
            return 0;
        ;;
        *)
            case "${prev}" in
                --activate-profiles|-P)
                    COMPREPLY=($(compgen -W "$profiles" -- "$cur"))
                    return 0;
                ;;
                --define|-D)
                    COMPREPLY=($(compgen -W "$defines" -- "$cur"))
                    return 0;
                ;;
            esac
        ;;
    esac

  goals=""
  goals=$goals _m2_make_goals "help" "describe effective-pom effective-settings system"
  goals=$goals _m2_make_goals "dependency" "tree sources analyze resolve"
  goals=$goals _m2_make_goals "jetty" "run-war"
  goals=$goals _m2_make_goals "assembly" "assembly"
  goals=$goals _m2_make_goals "versions" "display-dependency-updates display-plugin-updates display-property-updates"
  goals=$goals _m2_make_goals "license" "check format remove"
  # Sonar
  goals=$goals _m2_make_goals "sonar-dev-mojo" "start"
  # Hudson
  goals=$goals _m2_make_goals "hpi" "run"
  # TekLabs
  goals=$goals _m2_make_goals "jgettext" "gettext translate merge"

  possibles="$opts $goals $phases"
  cur=`echo $cur | sed 's/\\\\//g'`
  COMPREPLY=($(compgen -W "${possibles}" ${cur} | sed 's/\\\\//g'))
}

complete -F _m2_complete -o filenames mvn mvn-2.0 mvn-2.1 mvn-2.2 mvn-3.0
